{"version":3,"sources":["components/segmented-options-control/segmented-options-control.js","components/segmented-control/segmented-control.js","components/select-option-control/select-option-control.js","components/select-control/select-control.js","App.js","reportWebVitals.js","index.js"],"names":["SegmentedOptionsControl","props","refOption","React","createRef","handleOnClick","bind","handleOnBlur","handleOnChange","item","this","onChange","current","focus","classList","add","target","remove","selected","className","ref","onBlur","type","id","name","value","onClick","htmlFor","Component","SegmentedControl","items","map","SelectOptionControl","SelectControl","e","App","state","setState","genders","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e984a880.chunk.js","sourcesContent":["import React from \"react\";\n\nclass SegmentedOptionsControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.refOption = React.createRef();\n\n\t\tthis.handleOnClick = this.handleOnClick.bind(this);\n\t\tthis.handleOnBlur = this.handleOnBlur.bind(this);\n\t\tthis.handleOnChange = this.handleOnChange.bind(this);\n\t}\n\n\thandleOnChange(item) {\n\t\tthis.props.onChange(item);\n\t}\n\n\thandleOnClick(item) {\n\t\tthis.refOption.current.focus();\n\t\tthis.refOption.current.classList.add(\"segmented-control__item--selected\");\n\n\t\tif (item) {\n\t\t\tthis.props.onChange(item);\n\t\t}\n\t}\n\n\thandleOnBlur(item) {\n\t\titem.target.classList.remove(\"segmented-control__item--selected\");\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.props.item === this.props.selected) {\n\t\t\tthis.handleOnClick();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tkey={`item-${this.props.item}`}\n\t\t\t\tclassName={\n\t\t\t\t\tthis.props.item === this.props.selected\n\t\t\t\t\t\t? \" segmented-control__item segmented-control__item--selected\"\n\t\t\t\t\t\t: \"segmented-control__item\"\n\t\t\t\t}\n\t\t\t\tref={this.refOption}\n\t\t\t\tonBlur={this.handleOnBlur}\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"segmented-control__input\"\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tid={this.props.item}\n\t\t\t\t\tname=\"gender\"\n\t\t\t\t\tvalue={this.props.item}\n\t\t\t\t\tonClick={this.handleOnClick}\n\t\t\t\t/>\n\t\t\t\t<label className=\"segmented-control__label\" htmlFor={this.props.item}>\n\t\t\t\t\t{this.props.item}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SegmentedOptionsControl;\n","import React from \"react\";\n\nimport SegmentedOptionsControl from \"../segmented-options-control/segmented-options-control\";\n\nimport \"./segmented-control.css\";\n\nclass SegmentedControl extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"segmented-control\">\n\t\t\t\t{this.props.items.map((item) => (\n\t\t\t\t\t<SegmentedOptionsControl\n\t\t\t\t\t\tkey={`item-${item}`}\n\t\t\t\t\t\titem={item}\n\t\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t\t\tselected={this.props.selected}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SegmentedControl;\n","import React from \"react\";\n\nclass SelectOptionControl extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<option\n\t\t\t\tclassName=\"select-control__item\"\n\t\t\t\tvalue={this.props.item}\n\t\t\t>\n\t\t\t\t{this.props.item}\n\t\t\t</option>\n\t\t);\n\t}\n}\n\nexport default SelectOptionControl;\n","import React from \"react\";\n\nimport \"./select-control.css\";\n\nimport SelectOptionControl from \"../select-option-control/select-option-control\";\n\nclass SelectControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.handleOnChange = this.handleOnChange.bind(this);\n\t}\n\n\thandleOnChange(e) {\n\t\tthis.props.onChange(e);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<select\n\t\t\t\tclassName=\"select-control\"\n\t\t\t\tvalue={this.props.selected}\n\t\t\t\tname=\"gender\"\n\t\t\t\tonChange={this.handleOnChange}\n\t\t\t>\n\t\t\t\t{this.props.items.map((item) => (\n\t\t\t\t\t<SelectOptionControl key={`select-item-${item}`} item={item} />\n\t\t\t\t))}\n\t\t\t</select>\n\t\t);\n\t}\n}\n\nexport default SelectControl;\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport SegmentedControl from \"./components/segmented-control/segmented-control\";\nimport SelectControl from \"./components/select-control/select-control\";\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tselected: \"male\",\n\t\t};\n\n\t\tthis.handleOnChange = this.handleOnChange.bind(this);\n\t}\n\n\thandleOnChange(item) {\n\t\tthis.setState({ selected: item.target.value });\n\t}\n\n\trender() {\n\t\tconst genders = [\"male\", \"female\", \"other\"];\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<SegmentedControl\n\t\t\t\t\titems={genders}\n\t\t\t\t\tselected={this.state.selected}\n\t\t\t\t\tonChange={this.handleOnChange}\n\t\t\t\t/>\n\t\t\t\t<SelectControl\n\t\t\t\t\titems={genders}\n\t\t\t\t\tselected={this.state.selected}\n\t\t\t\t\tonChange={this.handleOnChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}